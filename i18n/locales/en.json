{
  "loginMessage1": "Login is required to use the app fully",
  "inspiration1": "This{br} web app {br} {gradient} {br} Makise Kurisu",
  "inspired by -": "inspired by -",
  "paragraph1": "In this app, you can create {br} an account to start messaging{br} like in {Telegram}. {br} The messages are client side encrypted.",
  "users": "users",
  "messages": "messages",
  "verified users": "verified users",
  "Chat with Amadeus": "Chat with Amadeus",
  "YouTypeMessageHeader": "You type the \n message, \n we’ll deliver it",
  "YouTypeMessageParagraph": "With the right credit card, you can improve your financial life by building credit, earning rewards and saving money. But with hundreds of credit cards on the market.",
  "Rewards": "Rewards",
  "RewardsDescription": "The best credit cards offer some tantalizing combinations of promotions and prizes",
  "Secure": "Secure",
  "SecureDescription": "We take proactive steps make sure your information and messages are secure.",
  "Notifications": "Notifications",
  "NotificationsDescription": "We deliver the notification to android and windows devices with  FCM (Firebase Cloud Messaging",
  "MessagingImageAlt": "Messaging example",
  "EasilyMessage": "Easily message with someone you know.",
  "EasilyMessageParagraph": "Easily message with someone you know. {br} You can send messages, photos, and videos to your friends and family.",
  "Browsers": "Browsers",
  "LearnHowToStartMessaging": "Learn how to start messaging",
  "aboutMeParagraph": "My name is SS$Abdurahman$SS. I live in SS$Shymkent$SS, Kazakhstan, and I’m growing as a frontend developer, especially with a focus on GG$Nuxt.js (Vue 3)$SS. My goal is to build modern, user-friendly web applications with clean architecture and strong performance.\n\nSS$Skills:$SS\nGG$- Vue 3 $SS – Confident with script setup, props, computed properties, directives, and routing  \n\nBB$- Tailwind CSS $SS – Main tool for styling  \n\nBB$- React Native $SS – Beginner level (using Expo and NativeWind)  \n\nBB$- TypeScript$SS – Used with Nuxt and React to detect bugs  \n\nRR$- Appwrite$SS – Used for authentication, database, and real-time features  \n\nVV$- Vite, GitHub Desktop$SS – Actively used in projects  \n\nFF$- Figma$SS – For website design\n\nSS$Projects:$SS\n\nBB$- Real-time Chat App$SS – Features scroll behavior, push notifications, and Appwrite integration\n\nPhone Number: SS$8705-525-35-84$SS",
  "Let'sTryOurServiceNow": "Let's try our service now",
  "LetsTryParagraph": "Everything you need to sign then add a friend to contacts, and start messaging. ",
  "footerLogoParagraph": "A new way to connect with people you know. ",
  "copyRight": "Copyright © 2025 Makise. All Rights Reserved.",
  "getStarted": "Get Started",
  "fl.usefulLinks": "Useful Links",
  "fl.content": "Content",
  "fl.howItWorks": "How it Works",
  "fl.create": "Create",
  "fl.explore": "Explore",
  "fl.termsAndServices": "Terms & Services",

  "fl.community": "Community",
  "fl.helpCenter": "Help Center",
  "fl.partners": "Partners",
  "fl.suggestions": "Suggestions",
  "fl.blog": "Blog",
  "fl.newsletters": "Newsletters",

  "fl.partner": "Partner",
  "fl.ourPartner": "Our Partner",
  "fl.becomeAPartner": "Become a Partner",

  "messaging": "Messaging",
  "message": {
    "inputPlaceholder": "Type a message..."
  },

  "signIn": {
    "title": "Sign In",
    "emailLabel": "Email",
    "emailPlaceholder": "Email",
    "passwordLabel": "Password",
    "passwordPlaceholder": "Password",
    "buttonText": "Sign In",
    "forgotPassword": "Forgot password",
    "noAccountPrompt": "Don't have an account?",
    "signUpLink": "Sign Up",
    "errors": {
      "emailRequired": "Email is required",
      "invalidEmailFormat": "Invalid email format",
      "emailNotFound": "Email not found",
      "incorrectPassword": "Incorrect password"
    },
    "feedback": {
      "success": "Successfully signed in",
      "failed": "Failed to sign in"
    }
  },
  "signUp": {
    "title": "Sign Up",
    "emailLabel": "Email",
    "passwordLabel": "Password",
    "passwordPlaceholder": "••••••••",
    "confirmPasswordLabel": "Confirm Password",
    "confirmPasswordPlaceholder": "••••••••",
    "buttonText": "Receive A Code",
    "alreadyAccountPrompt": "Already have an account?",
    "signInLink": "Sign In",
    "errors": {
      "emailRequired": "Email is required.",
      "invalidEmailFormat": "Enter a valid email address.",
      "passwordRequired": "Password is required.",
      "passwordMinLength": "Password must be at least 4 characters long.",
      "confirmPasswordRequired": "Password confirmation is required.",
      "passwordsMustMatch": "Passwords must match.",
      "unexpected": "An unexpected error occurred during sign up.",
      "userExists": "User with this email already exists or an error occurred."
    },
    "feedback": {
      "codeSent": "Code was sent to {email}"
    }
  },
  "profile": {
    "title": "My Profile",
    "backButtonAriaLabel": "back button",
    "profileImageAlt": "Profile Image",
    "profileStrengthLabel": "Profile Strength:",
    "placeholder": {
      "name": "Name",
      "lastName": "Last Name",
      "username": "username",
      "address": "Address",
      "phoneNumber": "Phone Number",
      "profileStrength": "50"
    },
    "feedback": {
      "usernameEmpty": "Username is empty",
      "usernameCopied": "Username copied to clipboard",
      "profileUpdated": "Profile data has been updated successfully",
      "profileImageUpdated": "Profile image and data have been updated successfully",
      "updateFailed": "Failed to update profile, {message}"
    }
  },
  "headerNav": {
    "loginButton": "Login",
    "accountLink": "Account",
    "signOutButton": "Sign out",
    "themeToggle": "Theme",
    "loadingAriaLabel": "loading",
    "settingsAriaLabel": "settings",
    "signOutConfirm": "Are you sure you want to sign out?"
  },
  "contactHeader": {
    "nameFallback": "Name",
    "lastSeenPrefix": "Last seen",
    "lastSeenFallbackTime": "at 33:33"
  },
  "navLinks": {
    "home": "Home",
    "about": "About",
    "contacts": "Contacts",
    "profile": "Profile",
    "documentation": "Documentation",
    "components": "Components",
    "tutorials": "Tutorials",
    "separator1": "documentation"
  },
  "account": {
    "personalInfoTitle": "Personal Information",
    "idProofTitle": "ID Proof",
    "routeName": "Account",
    "feedback": {
      "personalInfoSuccess": "Personal information updated successfully.",
      "personalInfoFailed": "Failed to update personal information.",
      "idProofSuccess": "ID Proof updated successfully.",
      "idProofFailed": "Failed to update ID Proof."
    }
  },
  "personalInfo": {
    "fullnameSubtitle": "Name",
    "fullnamePlaceholder": "Your Name",
    "birthdaySubtitle": "Birthday",
    "birthdayPlaceholder": "Your Birthday",
    "ageSubtitle": "Age",
    "agePlaceholder": "Your Age",
    "bloodGroupSubtitle": "Blood Group",
    "bloodGroupPlaceholder": "Your Blood Group",
    "maritalStatusSubtitle": "Marital Status",
    "maritalStatusPlaceholder": "Your Marital Status",
    "genderSubtitle": "Gender",
    "genderPlaceholder": "Your Gender",
    "languagesSubtitle": "Languages",
    "languagesPlaceholder": "Languages You Speak",
    "regionSubtitle": "Region",
    "regionPlaceholder": "Your Region",
    "nationalitySubtitle": "Nationality",
    "nationalityPlaceholder": "Your Nationality"
  },
  "idProof": {
    "atomicsSubtitle": "Atomics",
    "atomicsPlaceholder": "Your Atomics ID",
    "pinSubtitle": "PIN",
    "pinPlaceholder": "Your Personal Identification Number",
    "passportSubtitle": "Passport",
    "passportPlaceholder": "Your Passport Number",
    "drivingLicenseSubtitle": "Driving License",
    "drivingLicensePlaceholder": "Your Driving License Number"
  },
  "profileNavLinks": {
    "personal": "Personal",
    "contact": "Contact",
    "education": "Education",
    "skills": "Skills",
    "account": "Account",
    "work": "Work"
  },
  "profileLayout": {
    "routeName": "My Profile",
    "pageTitle": "Profile",
    "metaDescription": "User profile page for authenticated users."
  },
  "common": {
    "togglePasswordVisibility": "Toggle password visibility",
    "step": "Step"
  },
  "projectDetails": {
    "title": "Project Overview",
    "developerNameLabel": "Developer",
    "developerName": "Abdurahman Narbekov",
    "roleLabel": "Primary Role",
    "role": "Frontend  Developer (Nuxt 3, Vue 3, TailwindCSS)",
    "overviewLabel": "Project Summary",
    "overview": "A real-time messaging platform built with Nuxt 3 and Vue 3, designed for security, speed, and multilingual access. It features client-side encryption, seamless authentication via Appwrite and Google, and responsive UI powered by TailwindCSS. The architecture is modular, thoroughly tested with Cypress, and optimized for scalable growth.",
    "highlightsLabel": "Key Achievements",
    "highlights": "• Implemented full internationalization (English, Russian, Kazakh) using Nuxt i18n.\n• Integrated secure authentication and data management with Appwrite and Firebase.\n• Automated end-to-end tests with Cypress to ensure stability and reliability.\n• Developed responsive UI with TailwindCSS and advanced Vue animations.\n• Enhanced security using cryptography powered by libsodium.",
    "techStackLabel": "Core Technologies",
    "techStack": "BBBFrontend:$BB Nuxt 3, Vue 3, TailwindCSS\nBBBBackend & APIs:$BB Appwrite, Firebase (Client & Admin), Nodemailer\nBBBState Management:$BB Pinia\nBBBInternationalization:$BB nuxtjs/i18n, intlify/unplugin-vue-i18n\nBBBTesting:$BB Cypress (E2E automation)\nBBBUtilities:$BB dayjs for date and time processing\nBBBSecurity:$BB libsodium for cryptography",
    "additionalInfoLabel": "Additional Notes",
    "additionalInfo": "The application was architected with modular components and clean state management for long-term maintainability. It includes real-time data synchronization, secure cloud functions, and robust form validation using Vuelidate. Deployment pipelines were optimized for speed and reliability, while automated testing ensured consistent behavior across updates.",
    "languagesLabel": "Supported Languages",
    "languages": "English, Russian, Kazakh ",
    "externalLinks": {
      "label": "Relevant Links",
      "githubRepo": {
        "label": "GitHub Repository",
        "url": "https://github.com/Abdu-user/Makise",
        "description": "Source code and development history"
      },
      "liveDemo": {
        "label": "Live Demo",
        "url": "https://your-live-demo-link-here.com",
        "description": "Deployed application for public access"
      },
      "figmaDesign": {
        "label": "Figma Design",
        "url": "https://www.figma.com/design/C27wTG2gSKtzB3l5Uwpqcd/Makise-landing-page?m=auto&t=exnjwT833V3Wq8Vn-6",
        "description": "UI/UX design files and prototype"
      },
      "otherProject": {
        "label": "Other Project",
        "url": "https://charles-kahn.netlify.app",
        "description": "Additional work demonstrating related skills"
      }
    },
    "whatCanYouDoHere": "What can you do in this app",
    "authorize": "Authenticate ",
    "authorizeText": "You can create an account and sign up. Alternatively, you can sign in with Google.",
    "authorizeHowTo": "How to sign up?",
    "authorizeSignIn": "Sign in Page",
    "profile": "Profile Page",
    "profileText": "You can view and edit your profile information, including your name, username, profile image and profile background image.",
    "profileHowTo": "How to edit your profile?",
    "messaging": "Messaging",
    "messagingText": "You can send messages to your friends and family, and receive notifications when they reply (if they are on windows or an android).",
    "messagingHowTo": "How to start sending messages?"
  },
  "routes": {
    "about": "About",
    "contacts": "Contacts",
    "home": "Home",
    "profile": "Profile",
    "documentation": "Documentation",
    "components": "Components",
    "tutorials": "Tutorials",
    "account": "Account"
  },
  "tutorial": {
    "howToSignUpDesc": "There are two ways to sign up: \n 1) using email and password, or \n 2) using Google account. ",
    "howtoSignUpWithEmail": "To sign up with email and password, go to the Sign Up page, enter your email, password and confirm password, then click the 'Receive A Code' button. You will receive a verification code via email. Enter the code to complete the sign-up process.",
    "howtoSignUpWithGoogle": "To sign up with Google, go to the Sign In or Sign Up pages and click the 'Google' button. You will be redirected to Google's authentication page. After signing in, you will be redirected to the profile page and your account will be created."
  }
}
